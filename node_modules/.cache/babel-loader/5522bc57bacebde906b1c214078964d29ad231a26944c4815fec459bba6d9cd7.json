{"ast":null,"code":"import axios from \"axios\";\nconst auth_Endpoint = \"https://todo-list.alphacamp.io/api/auth\";\nexport async function login({\n  username,\n  password\n}) {\n  try {\n    const {\n      data\n    } = await axios.post(`${auth_Endpoint}/login`, {\n      username,\n      password\n    });\n    console.log(data);\n    const {\n      authToken\n    } = data;\n    //有通過server檢查才有authToken,加入success key. 若沒通過, 直接返回所有data\n    if (authToken) {\n      return {\n        success: true,\n        ...data\n      };\n    }\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function signup({\n  username,\n  password,\n  email\n}) {\n  try {\n    const {\n      data\n    } = await axios.post(`${auth_Endpoint}/register`, {\n      username,\n      password,\n      email\n    });\n\n    //使用解構函式從data中取出authToken\n    const {\n      authToken\n    } = data;\n    if (authToken) {\n      return {\n        success: true,\n        ...data\n      };\n    }\n    return {\n      data\n    };\n  } catch (error) {\n    console.error(error);\n  }\n}\nfunction checkPermission({\n  authToken\n}) {\n  axios.get(`${auth_Endpoint}/test-token`, {\n    header: {\n      authToken: {\n        bearer\n      }\n    }\n  });\n}","map":{"version":3,"names":["axios","auth_Endpoint","login","username","password","data","post","console","log","authToken","success","error","signup","email","checkPermission","get","header","bearer"],"sources":["/Users/huang/todolist-react-starter/src/api/auth.js"],"sourcesContent":["import axios from \"axios\";\n\nconst auth_Endpoint = \"https://todo-list.alphacamp.io/api/auth\";\n\nexport async function login({username, password}){\n  try {\n    const { data } = await axios.post(`${auth_Endpoint}/login`, {\n      username,\n      password,\n    });\n\n    console.log(data);\n\n    const { authToken } = data;\n    //有通過server檢查才有authToken,加入success key. 若沒通過, 直接返回所有data\n    if (authToken) {\n      return {\n        success: true,\n        ...data,\n      }\n    }\n    return data;\n  }\n  catch(error){\n    console.error(error)\n  }\n}\n\nexport async function signup({username , password, email}){\n  try{\n    const { data } = await axios.post(`${auth_Endpoint}/register`, { \n      username, \n      password , \n      email});\n\n    //使用解構函式從data中取出authToken\n    const { authToken } = data \n\n    if(authToken){\n      return {\n        success:true,\n        ...data\n      }\n    }\n    return {\n      data\n    }\n  }\n  catch(error){\n    console.error(error)\n  }\n}\n\nfunction checkPermission({authToken}){\n  axios.get(`${auth_Endpoint}/test-token`,{\n    header : {\n      authToken : { bearer}\n    }\n  });\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAG,yCAAyC;AAE/D,OAAO,eAAeC,KAAKA,CAAC;EAACC,QAAQ;EAAEC;AAAQ,CAAC,EAAC;EAC/C,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,aAAa,QAAQ,EAAE;MAC1DE,QAAQ;MACRC;IACF,CAAC,CAAC;IAEFG,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IAEjB,MAAM;MAAEI;IAAU,CAAC,GAAGJ,IAAI;IAC1B;IACA,IAAII,SAAS,EAAE;MACb,OAAO;QACLC,OAAO,EAAE,IAAI;QACb,GAAGL;MACL,CAAC;IACH;IACA,OAAOA,IAAI;EACb,CAAC,CACD,OAAMM,KAAK,EAAC;IACVJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;EACtB;AACF;AAEA,OAAO,eAAeC,MAAMA,CAAC;EAACT,QAAQ;EAAGC,QAAQ;EAAES;AAAK,CAAC,EAAC;EACxD,IAAG;IACD,MAAM;MAAER;IAAK,CAAC,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,aAAa,WAAW,EAAE;MAC7DE,QAAQ;MACRC,QAAQ;MACRS;IAAK,CAAC,CAAC;;IAET;IACA,MAAM;MAAEJ;IAAU,CAAC,GAAGJ,IAAI;IAE1B,IAAGI,SAAS,EAAC;MACX,OAAO;QACLC,OAAO,EAAC,IAAI;QACZ,GAAGL;MACL,CAAC;IACH;IACA,OAAO;MACLA;IACF,CAAC;EACH,CAAC,CACD,OAAMM,KAAK,EAAC;IACVJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;EACtB;AACF;AAEA,SAASG,eAAeA,CAAC;EAACL;AAAS,CAAC,EAAC;EACnCT,KAAK,CAACe,GAAG,CAAC,GAAGd,aAAa,aAAa,EAAC;IACtCe,MAAM,EAAG;MACPP,SAAS,EAAG;QAAEQ;MAAM;IACtB;EACF,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}