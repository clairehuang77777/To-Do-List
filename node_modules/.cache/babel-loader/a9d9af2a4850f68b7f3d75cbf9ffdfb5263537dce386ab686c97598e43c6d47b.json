{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/huang/todolist-react-starter/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import styled from'styled-components';import{CheckActiveIcon,CheckCircleIcon,CheckHoverIcon}from'../assets/images';import clsx from'clsx';import{useRef}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StyledTaskItem=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  min-height: 52px;\\n  display: flex;\\n  align-items: center;\\n  position: relative;\\n  word-wrap: break-word;\\n  word-break: break-word;\\n  padding: 0 12px;\\n  box-shadow: 0 17px 0 -16px #e5e5e5;\\n  flex-wrap: wrap;\\n\\n  .task-item-body-input {\\n    user-select: none;\\n    display: none;\\n    flex: 1;\\n    padding: 8px 0px;\\n    border: 0;\\n    outline: 0;\\n    font-size: 1rem;\\n\\n    &::placeholder {\\n      color: var(--gray);\\n      font-size: 13px;\\n    }\\n  }\\n\\n  &:hover {\\n    background: #fff3eb;\\n    box-shadow: inset 0 0 0 1px #fff3eb;\\n\\n    .task-item-action .btn-destroy {\\n      display: inline-flex;\\n    }\\n  }\\n\\n  &.done {\\n    .task-item-body {\\n      color: var(--gray);\\n      text-decoration: line-through;\\n    }\\n\\n    .icon-checked {\\n      background-image: url(\",\");\\n    }\\n  }\\n\\n  &.edit {\\n    .task-item-body-input {\\n      display: block;\\n    }\\n    .task-item-body-text {\\n      display: none;\\n    }\\n    .task-item-action {\\n      display: none !important;\\n    }\\n  }\\n\\n  .task-item-checked {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .task-item-body {\\n    font-weight: 400;\\n    padding: 8px 12px;\\n    flex: 1;\\n    display: flex;\\n  }\\n\\n  .task-item-action {\\n    .btn-destroy {\\n      display: none;\\n      font-size: 30px;\\n      transition: color 0.2s ease-out;\\n      font-weight: 300;\\n      &:after {\\n        content: '\\xD7';\\n      }\\n    }\\n  }\\n\\n  .icon-checked {\\n    background-image: url(\",\");\\n    background-position: center;\\n    background-repeat: no-repeat;\\n\\n    &:hover {\\n      transition: background-image 0.5s;\\n      background-image: url(\",\");\\n    }\\n  }\\n\"])),CheckActiveIcon,CheckCircleIcon,CheckHoverIcon);/*TodoItem裡面的props直接沿用TodoCollection的props*/const TodoItem=_ref=>{let{todo,onSave,onDelete,onToggleDone,onChangeMode}=_ref;const inputRef=useRef(null);//製作監聽器,在編輯模式中監聽不同event.key的流程\nfunction handleKeyDown(event){if(inputRef.current.value.length>0&&event.key==='Enter'){console.log('onSave triggered!');onSave({id:todo.id,title:inputRef.current.value});}if(event.key==='Escape'){onChangeMode({id:todo.id,isEdit:false});}}return/*#__PURE__*/_jsxs(StyledTaskItem,{className:clsx('',{done:todo.isDone,edit:todo.isEdit}),children:[/*#__PURE__*/_jsx(\"div\",{className:\"task-item-checked\",children:/*#__PURE__*/_jsx(\"span\",{className:\"icon icon-checked\",onClick:()=>onToggleDone(todo.id)})}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-item-body\",onClick:()=>{console.log('double Click triggered!');onChangeMode===null||onChangeMode===void 0?void 0:onChangeMode({id:todo.id,isEdit:true});},children:[/*#__PURE__*/_jsx(\"span\",{className:\"task-item-body-text\",children:todo.title}),/*#__PURE__*/_jsx(\"input\",{ref:inputRef,className:\"task-item-body-input\",defaultValue:todo.title,onKeyDown:handleKeyDown})]}),/*#__PURE__*/_jsx(\"div\",{className:\"task-item-action \",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn-reset btn-destroy icon\",onClick:()=>{onDelete(todo.id);}})})]});};export default TodoItem;","map":{"version":3,"names":["styled","CheckActiveIcon","CheckCircleIcon","CheckHoverIcon","clsx","useRef","jsx","_jsx","jsxs","_jsxs","StyledTaskItem","div","_templateObject","_taggedTemplateLiteral","TodoItem","_ref","todo","onSave","onDelete","onToggleDone","onChangeMode","inputRef","handleKeyDown","event","current","value","length","key","console","log","id","title","isEdit","className","done","isDone","edit","children","onClick","ref","defaultValue","onKeyDown"],"sources":["/Users/huang/todolist-react-starter/src/components/TodoItem.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  CheckActiveIcon,\n  CheckCircleIcon,\n  CheckHoverIcon,\n} from '../assets/images';\nimport clsx from 'clsx';\nimport { useRef } from 'react';\n\nconst StyledTaskItem = styled.div`\n  min-height: 52px;\n  display: flex;\n  align-items: center;\n  position: relative;\n  word-wrap: break-word;\n  word-break: break-word;\n  padding: 0 12px;\n  box-shadow: 0 17px 0 -16px #e5e5e5;\n  flex-wrap: wrap;\n\n  .task-item-body-input {\n    user-select: none;\n    display: none;\n    flex: 1;\n    padding: 8px 0px;\n    border: 0;\n    outline: 0;\n    font-size: 1rem;\n\n    &::placeholder {\n      color: var(--gray);\n      font-size: 13px;\n    }\n  }\n\n  &:hover {\n    background: #fff3eb;\n    box-shadow: inset 0 0 0 1px #fff3eb;\n\n    .task-item-action .btn-destroy {\n      display: inline-flex;\n    }\n  }\n\n  &.done {\n    .task-item-body {\n      color: var(--gray);\n      text-decoration: line-through;\n    }\n\n    .icon-checked {\n      background-image: url(${CheckActiveIcon});\n    }\n  }\n\n  &.edit {\n    .task-item-body-input {\n      display: block;\n    }\n    .task-item-body-text {\n      display: none;\n    }\n    .task-item-action {\n      display: none !important;\n    }\n  }\n\n  .task-item-checked {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .task-item-body {\n    font-weight: 400;\n    padding: 8px 12px;\n    flex: 1;\n    display: flex;\n  }\n\n  .task-item-action {\n    .btn-destroy {\n      display: none;\n      font-size: 30px;\n      transition: color 0.2s ease-out;\n      font-weight: 300;\n      &:after {\n        content: '×';\n      }\n    }\n  }\n\n  .icon-checked {\n    background-image: url(${CheckCircleIcon});\n    background-position: center;\n    background-repeat: no-repeat;\n\n    &:hover {\n      transition: background-image 0.5s;\n      background-image: url(${CheckHoverIcon});\n    }\n  }\n`;\n\n/*TodoItem裡面的props直接沿用TodoCollection的props*/\nconst TodoItem = ({todo, onSave, onDelete, onToggleDone, onChangeMode}) => {\n  const inputRef = useRef(null)\n  //製作監聽器,在編輯模式中監聽不同event.key的流程\n  function handleKeyDown(event){\n    if(inputRef.current.value.length>0 && event.key === 'Enter'){\n      console.log('onSave triggered!')\n      onSave({id:todo.id, title:inputRef.current.value})\n    }\n    \n    if(event.key === 'Escape'){\n      onChangeMode({id:todo.id, isEdit:false})\n    }\n  }\n  return (\n    <StyledTaskItem\n      className={clsx('', { done: todo.isDone, edit: todo.isEdit })}\n    >\n      <div className=\"task-item-checked\">\n        <span\n          className=\"icon icon-checked\"\n          onClick={() => onToggleDone(todo.id)}\n        />\n      </div>\n      <div\n        className=\"task-item-body\"\n        onClick={() => {\n          console.log('double Click triggered!');\n          onChangeMode?.({ id: todo.id, isEdit: true });\n        }}\n      >\n        <span\n          className=\"task-item-body-text\"\n        >\n          {todo.title}\n        </span>\n        <input\n          ref={inputRef}\n          className=\"task-item-body-input\"\n          defaultValue={todo.title}\n          onKeyDown={handleKeyDown}\n        />\n      </div>\n      <div className=\"task-item-action \">\n        <button className=\"btn-reset btn-destroy icon\"\n        onClick={()=>{\n          onDelete(todo.id)}}></button>\n      </div>\n    </StyledTaskItem>\n  );\n};\n\nexport default TodoItem;\n"],"mappings":"6JAAA,MAAO,CAAAA,MAAM,KAAM,mBAAmB,CACtC,OACEC,eAAe,CACfC,eAAe,CACfC,cAAc,KACT,kBAAkB,CACzB,MAAO,CAAAC,IAAI,KAAM,MAAM,CACvB,OAASC,MAAM,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/B,KAAM,CAAAC,cAAc,CAAGV,MAAM,CAACW,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,wpDA0CHZ,eAAe,CA0CjBC,eAAe,CAMbC,cAAc,CAG3C,CAED,4CACA,KAAM,CAAAW,QAAQ,CAAGC,IAAA,EAA0D,IAAzD,CAACC,IAAI,CAAEC,MAAM,CAAEC,QAAQ,CAAEC,YAAY,CAAEC,YAAY,CAAC,CAAAL,IAAA,CACpE,KAAM,CAAAM,QAAQ,CAAGhB,MAAM,CAAC,IAAI,CAAC,CAC7B;AACA,QAAS,CAAAiB,aAAaA,CAACC,KAAK,CAAC,CAC3B,GAAGF,QAAQ,CAACG,OAAO,CAACC,KAAK,CAACC,MAAM,CAAC,CAAC,EAAIH,KAAK,CAACI,GAAG,GAAK,OAAO,CAAC,CAC1DC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,CAChCZ,MAAM,CAAC,CAACa,EAAE,CAACd,IAAI,CAACc,EAAE,CAAEC,KAAK,CAACV,QAAQ,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC,CACpD,CAEA,GAAGF,KAAK,CAACI,GAAG,GAAK,QAAQ,CAAC,CACxBP,YAAY,CAAC,CAACU,EAAE,CAACd,IAAI,CAACc,EAAE,CAAEE,MAAM,CAAC,KAAK,CAAC,CAAC,CAC1C,CACF,CACA,mBACEvB,KAAA,CAACC,cAAc,EACbuB,SAAS,CAAE7B,IAAI,CAAC,EAAE,CAAE,CAAE8B,IAAI,CAAElB,IAAI,CAACmB,MAAM,CAAEC,IAAI,CAAEpB,IAAI,CAACgB,MAAO,CAAC,CAAE,CAAAK,QAAA,eAE9D9B,IAAA,QAAK0B,SAAS,CAAC,mBAAmB,CAAAI,QAAA,cAChC9B,IAAA,SACE0B,SAAS,CAAC,mBAAmB,CAC7BK,OAAO,CAAEA,CAAA,GAAMnB,YAAY,CAACH,IAAI,CAACc,EAAE,CAAE,CACtC,CAAC,CACC,CAAC,cACNrB,KAAA,QACEwB,SAAS,CAAC,gBAAgB,CAC1BK,OAAO,CAAEA,CAAA,GAAM,CACbV,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC,CACtCT,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAG,CAAEU,EAAE,CAAEd,IAAI,CAACc,EAAE,CAAEE,MAAM,CAAE,IAAK,CAAC,CAAC,CAC/C,CAAE,CAAAK,QAAA,eAEF9B,IAAA,SACE0B,SAAS,CAAC,qBAAqB,CAAAI,QAAA,CAE9BrB,IAAI,CAACe,KAAK,CACP,CAAC,cACPxB,IAAA,UACEgC,GAAG,CAAElB,QAAS,CACdY,SAAS,CAAC,sBAAsB,CAChCO,YAAY,CAAExB,IAAI,CAACe,KAAM,CACzBU,SAAS,CAAEnB,aAAc,CAC1B,CAAC,EACC,CAAC,cACNf,IAAA,QAAK0B,SAAS,CAAC,mBAAmB,CAAAI,QAAA,cAChC9B,IAAA,WAAQ0B,SAAS,CAAC,4BAA4B,CAC9CK,OAAO,CAAEA,CAAA,GAAI,CACXpB,QAAQ,CAACF,IAAI,CAACc,EAAE,CAAC,EAAE,CAAS,CAAC,CAC5B,CAAC,EACQ,CAAC,CAErB,CAAC,CAED,cAAe,CAAAhB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}