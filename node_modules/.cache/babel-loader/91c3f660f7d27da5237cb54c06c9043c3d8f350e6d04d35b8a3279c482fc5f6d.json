{"ast":null,"code":"import axios from \"axios\";\nconst base_URL = \"https://todo-list.alphacamp.io/api\";\n//CRUD串接api設定\n\nconst axiosInstance = axios.create({\n  baseURL: base_URL\n});\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"authToken\");\n  if (token) {\n    config.headers['Authorization'] = `Bearer `;\n  }\n  // Do something before request is sent\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n});\nexport async function getTodos() {\n  try {\n    const res = await axios.get(`${base_URL}/todos`);\n    return res.data;\n  } catch (error) {\n    console.error('[getTodos failed]:', error);\n  }\n}\nexport async function postTodos(payloads) {\n  const {\n    title,\n    isDone\n  } = payloads;\n  try {\n    const res = await axios.post(`${base_URL}/todos`, {\n      title,\n      isDone\n    });\n    console.log(\"use axios post data to local server\");\n    return res.data;\n  } catch (error) {\n    console.error('[postTodos failed]', error);\n  }\n}\nexport async function patchTodos(payloads) {\n  try {\n    var _payloads$id, _payloads$id2, _payloads$id3;\n    console.log(\"Payloads:\", payloads);\n    const id = ((_payloads$id = payloads.id) === null || _payloads$id === void 0 ? void 0 : _payloads$id.id) || payloads.id;\n    const title = payloads.title || ((_payloads$id2 = payloads.id) === null || _payloads$id2 === void 0 ? void 0 : _payloads$id2.title);\n    const isDone = payloads.isDone || ((_payloads$id3 = payloads.id) === null || _payloads$id3 === void 0 ? void 0 : _payloads$id3.isDone);\n    const res = await axios.patch(`${base_URL}/todos/${id}`, {\n      id,\n      title,\n      isDone\n    });\n    return res.data;\n  } catch (error) {\n    console.error('[patchTodo failed]', error);\n  }\n}\nexport async function deleteTodos(id) {\n  try {\n    const res = await axios.delete(`${base_URL}/todos/${id}`);\n    return res.data;\n  } catch (error) {\n    console.error('[deleteTodo failed]', error);\n  }\n}","map":{"version":3,"names":["axios","base_URL","axiosInstance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","getTodos","res","get","data","console","postTodos","payloads","title","isDone","post","log","patchTodos","_payloads$id","_payloads$id2","_payloads$id3","id","patch","deleteTodos","delete"],"sources":["/Users/huang/todolist-react-starter/src/api/todo.js"],"sourcesContent":["import axios from \"axios\";\n\nconst base_URL = \"https://todo-list.alphacamp.io/api\";\n//CRUD串接api設定\n\nconst axiosInstance = axios.create({\n  baseURL : base_URL,\n\n})\n\naxiosInstance.interceptors.request.use(\n   (config) => {\n    const token = localStorage.getItem(\"authToken\")\n    if(token){\n      config.headers['Authorization'] = `Bearer `\n    }\n    // Do something before request is sent\n    return config;\n  },\n  function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  }\n);\n\n\n\nexport async function getTodos(){\n  try { \n    const res = await axios.get(`${base_URL}/todos`)\n    return res.data\n  }\n  catch(error) {\n    console.error('[getTodos failed]:',error)\n  }\n}\n\nexport async function postTodos(payloads){\n  const { title, isDone } = payloads\n  try { \n    const res = await axios.post(`${base_URL}/todos`, {\n    title,\n    isDone\n  });\n    console.log(\"use axios post data to local server\")\n    return res.data\n  }\n  catch(error) {\n    console.error('[postTodos failed]',error)\n  }\n}\n\n\nexport async function patchTodos(payloads){\n  try {\n    console.log(\"Payloads:\", payloads);\n    const id = payloads.id?.id || payloads.id;\n    const title = payloads.title || payloads.id?.title;\n    const isDone = payloads.isDone || payloads.id?.isDone;\n\n    const res = await axios.patch(`${base_URL}/todos/${id}`,{\n      id,\n      title,\n      isDone\n    })\n    return res.data\n  }\n  catch(error){\n    console.error('[patchTodo failed]',error)\n  }\n}\n\nexport async function deleteTodos(id){\n  try {\n    const res = await axios.delete(`${base_URL}/todos/${id}`)\n    return res.data\n  }\n  catch(error){\n    console.error('[deleteTodo failed]',error)\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}